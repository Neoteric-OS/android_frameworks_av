package {
    default_applicable_licenses: [
        "frameworks_av_media_libmediaplayerservice_license",
    ],
}

// Added automatically by a large-scale-change
// See: http://go/android-license-faq
license {
    name: "frameworks_av_media_libmediaplayerservice_license",
    visibility: [":__subpackages__"],
    license_kinds: [
        "SPDX-license-identifier-Apache-2.0",
    ],
    license_text: [
        "NOTICE",
    ],
}

filegroup {
    name: "libmediaplayerservice_sources",

    srcs: [
        "ActivityManager.cpp",
        "DeathNotifier.cpp",
        "MediaPlayerFactory.cpp",
        "MediaPlayerService.cpp",
        "MediaRecorderClient.cpp",
        "MetadataRetrieverClient.cpp",
        "StagefrightMetadataRetriever.cpp",
        "StagefrightRecorder.cpp",
        "TestPlayerStub.cpp",
// QTI_BEGIN: 2023-06-21: Video: libmediaplayerservice: Enable perfboost during heif decode
        "mpctl/PerfBoost.cpp",
// QTI_END: 2023-06-21: Video: libmediaplayerservice: Enable perfboost during heif decode
    ],
}

cc_defaults {
    name: "libmediaplayerservice_defaults",

    srcs: [
        ":libmediaplayerservice_sources",
    ],

    shared_libs: [
        "android.hardware.media.c2@1.0",
        "android.hardware.media.omx@1.0",
        "av-types-aidl-cpp",
        "framework-permission-aidl-cpp",
        "libaconfig_storage_read_api_cc",
        "libactivitymanager_aidl",
        "libandroid_net",
        "libaudioclient",
        "libaudioclient_aidl_conversion",
        "libaudiofoundation",
        "libbase",
        "libbinder",
        "libbinder_ndk",
        "libcamera_client",
        "libcodec2_client",
        "libcrypto",
        "libcutils",
        "libdatasource",
        "libdl",
        "libdrmframework",
        "libgui",
        "libhidlbase",
        "liblog",
        "libmedia",
        "libmedia_codeclist",
        "libmedia_omx",
        "libmediadrm",
        "libmediametrics",
        "libmediautils",
        "libmemunreachable",
        "libnetd_client",
        "libpowermanager",
        "libstagefright",
        "libstagefright_foundation",
        "libstagefright_httplive",
// QTI_BEGIN: 2018-01-23: Audio: stagefright: Make classes customizable and add AV extensions
        "libstagefright_omx",
// QTI_END: 2018-01-23: Audio: stagefright: Make classes customizable and add AV extensions
        "libutils",
        "packagemanager_aidl-cpp",
        "server_configurable_flags",
    ],

    header_libs: [
        "libmediautils_headers",
        "libstagefright_rtsp_headers",
        "libstagefright_webm_headers",
        "media_plugin_headers",
        "libstagefright_mpeg2support_headers",
    ],

    static_libs: [
        "com.android.media.flags.editing-aconfig-cc",
        "framework-permission-aidl-cpp",
        "libplayerservice_datasource",
        "libstagefright_nuplayer",
        "libstagefright_rtsp",
        "libstagefright_timedtext",
    ],

// QTI_BEGIN: 2018-01-23: Audio: stagefright: Make classes customizable and add AV extensions
    whole_static_libs: [
        "libavmediaserviceextensions",
    ],

// QTI_END: 2018-01-23: Audio: stagefright: Make classes customizable and add AV extensions
    sanitize: {
        cfi: true,
    },
}

cc_library {
    name: "libmediaplayerservice",

    defaults: [
        "libmediaplayerservice_defaults",
    ],

    export_shared_lib_headers: [
        "framework-permission-aidl-cpp",
        "libmedia",
    ],

    export_header_lib_headers: [
        "libmediautils_headers",
    ],

    include_dirs: [
// QTI_BEGIN: 2018-01-23: Audio: stagefright: Make classes customizable and add AV extensions
        "frameworks/av/media/libavextensions",
        "frameworks/av/media/libmediaextractor",
// QTI_END: 2018-01-23: Audio: stagefright: Make classes customizable and add AV extensions
        "frameworks/av/media/module/mpeg2ts",
    ],

    export_include_dirs: [
        ".",
    ],

    local_include_dirs: ["include"],
}
